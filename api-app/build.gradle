plugins {
  id 'java'
  id 'org.springframework.boot' version '3.4.2'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'com.diffplug.spotless' version '7.0.2'
}

group = 'de.muspellheim.activitysampling'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.flywaydb:flyway-core'
  implementation 'org.flywaydb:flyway-database-postgresql'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  compileOnly 'org.projectlombok:lombok'
  runtimeOnly 'org.postgresql:postgresql'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  testRuntimeOnly 'com.h2database:h2'
}

test {
  useJUnitPlatform()
  testLogging {
    events 'passed', 'skipped', 'failed'
    showExceptions = true
    exceptionFormat 'full'
  }
}

spotless {
  java {
    googleJavaFormat()
    licenseHeader '/* Copyright (c) $YEAR Falko Schumann. All rights reserved. MIT license. */\n\n'
  }
}

tasks.register("processFrontendResources", Copy) {
  group = "Frontend"
  description = "Process frontend resources"

  from(project.layout.projectDirectory.dir("../web-app/dist"))
  into(project.layout.buildDirectory.dir("resources/main/public"))
}

tasks.named("processResources") {
  dependsOn("processFrontendResources")
}
